- defaults:
    name: virt-who-provision
    description: |
        Managed by Jenkins Job Builder. Do not edit via web.
    concurrent: true
    scm:
        - git:
            url: 'https://github.com/shihliu/entitlement-ci'
            branches:
                - origin/master
            basedir: entitlement-ci
    wrappers:
        - default-virt-who-wrappers

- defaults:
    name: virt-who-runtest
    description: |
        Managed by Jenkins Job Builder. Do not edit via web.
    concurrent: true
    scm:
        - git:
            url: 'https://github.com/shihliu/entitlement-ci'
            branches:
                - origin/master
            basedir: entitlement-ci
    wrappers:
        - default-virt-who-wrappers

- wrapper:
    name: default-virt-who-wrappers
    wrappers:
        - ansicolor
        - workspace-cleanup
        - timestamps

- publisher:
    name: default-virt-who-runtest-publishers
    publishers:
    - xunit:
        thresholdmode: number
        thresholds:
        - failed:
            unstable: 0
            unstablenew: 0
            failure: 0
            failurenew: 0
        - skipped:
            unstable: 0
            unstablenew: 0
            failure: 0
            failurenew: 0
        types:
        - junit:
            pattern: '*.xml'
            deleteoutput: false

- publisher:
    name: default-virt-who-publishers
    publishers:
    - email-ext:
        recipients: shihliu@redhat.com
        reply-to: shihliu@redhat.com
        content-type: default
        subject: '[Entitlement-CI]($SERVER_TYPE) $PROJECT_NAME on $RHEL_COMPOSE -
          $BUILD_STATUS!'
        body: |-
          [$SERVER_TYPE] $PROJECT_NAME on $RHEL_COMPOSE - Build # $BUILD_NUMBER - $BUILD_STATUS:

          Runtime Info As Follows:

          Test Packages
          $VIRTWHO_VERSION
          $RHSM
          $PYTHON_RHSM

          export RHEL_COMPOSE=$RHEL_COMPOSE
          export REMOTE_IP=$REMOTE_IP
          export SERVER_TYPE=$SERVER_TYPE
          export SERVER_IP=$SERVER_IP
          export SERVER_HOSTNAME=$SERVER_HOSTNAME
          export SERVER_COMPOSE=$SERVER_COMPOSE

          Details:

          Check console output at $BUILD_URL
          Check text log at ${BUILD_URL}consoleText/
          Check report at ${BUILD_URL}testReport/
        attach-build-log: false
        always: true
        send-to:
        - requester
        - recipients

- job-template:
    name: 'virt-who-esx-provision'
    defaults: virt-who-provision
    node: cloud-rhel
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SWITCH=true/false
            #export RHEL_COMPOSE=
            echo "*********************************setup env*********************************"
            if [ "$SWITCH"x = "true"x ]
            then
                export SWITCH=false
            elif [ "$SWITCH"x = "false"x ]
            then
                export SWITCH=true
            fi
            # Provision Test Resources
            
            $WORKSPACE/entitlement-ci/provision/host_provision.sh --containername=esxhost.redhat.com --site=10.66.129.232
            echo "show RESOURCES.txt"
            cat $WORKSPACE/RESOURCES.txt
            echo "show SERVER.txt"
            cat $WORKSPACE/SERVER.txt
            echo "********************************runtime env********************************"
            env | grep -E '(SERVER_TYPE|SERVER_IP|SERVER_HOSTNAME|RHEL_COMPOSE|SERVER_COMPOSE)' | sort | xargs -i -d "\n" echo "export" {{}}
            env | grep -E '(SERVER_TYPE|SERVER_IP|SERVER_HOSTNAME|RHEL_COMPOSE|SERVER_COMPOSE)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt
    publishers:
      - archive:
          artifacts: '*.txt, *.json'
          allow-empty: 'true'
      - trigger-parameterized-builds:
        - project: virt-who-esx-runtest
          current-parameters: false
          condition: SUCCESS
          property-file: $WORKSPACE/RESOURCES.txt
          fail-on-missing: true

- job-template:
    name: virt-who-esx-runtest
    defaults: virt-who-runtest
    node: 'satellite-slave'
    builders:
    - copyartifact:
        project: virt-who-esx-provision
        filter: '*.txt, *.json'
        target: $WORKSPACE
    - shell: |
        #!/bin/bash
        echo "Jenkins machine info we are running on"
        ifconfig
        echo "Pinging Test Resources"
        cat $WORKSPACE/RESOURCES.txt
        echo REMOTE_IP=$REMOTE_IP
        echo "*********************************setup env*********************************"
        #setup environment here to run alone, change back when finished
        #export RHEL_COMPOSE=
        #export REMOTE_IP=
        #export SERVER_IP=
        #export SERVER_TYPE=
        #export SERVER_HOSTNAME=
        echo "*********************************setup env*********************************"
        pushd $WORKSPACE/entitlement-ci/testcases/virt_who_polarion/
        nosetests virtwho_esx_setup.py --with-xunit --xunit-file=$WORKSPACE/nosetests.xml
        popd

        pushd $WORKSPACE/entitlement-ci/testcases/virt_who_polarion/esx/
        nosetests *.py --with-xunit --xunit-file=$WORKSPACE/nosetests.xml
        popd
        echo "********************************runtime env********************************"
        env | grep -E '(REMOTE_IP|REMOTE_HOSTNAME|SERVER_TYPE|SERVER_IP|SERVER_HOSTNAME|RHEL_COMPOSE|SERVER_COMPOSE)' | sort | xargs -i -d "\n" echo {{}} | tee -a $WORKSPACE/RUNTIME_INFO.txt
        echo "********************************runtime env********************************"
    - inject:
        properties-file: $WORKSPACE/RUNTIME_INFO.txt
    publishers:
    - archive:
        artifacts: '**/**'
        allow-empty: 'true'
    - default-virt-who-runtest-publishers
    - default-virt-who-publishers
    #- default-polarion-publishers
 
- job-group:
    name: virt-who-esx-provision-runtest
    jobs:
    - virt-who-esx-provision
    - virt-who-esx-runtest
- project:
    name: virt-who-esx-jobs
    project: virt-who-esx
    project_defaults: entitlement-ci/config/project_defaults
    topology_path: entitlement-ci/config
    topology: bkr_build_single_provision_no_hvm
    ssh_keyfile: entitlement-ci/config/keys/ent-key
    beaker_keyfile: entitlement-ci/config/keys/beaker-key
    tests_path: entitlement-ci/tests
    testparams: echo "I am a test parameter"
    jobs:
    - virt-who-esx-provision-runtest
    polarion_template: virt-who for esx auto template
