- defaults:
    name: virt-who-provision
    description: |
        Managed by Jenkins Job Builder. Do not edit via web.
    concurrent: true
    scm:
        - git:
            url: 'https://github.com/shihliu/entitlement-ci'
            branches:
                - origin/master
            basedir: entitlement-ci
    wrappers:
        - default-virt-who-wrappers

- defaults:
    name: virt-who-runtest
    description: |
        Managed by Jenkins Job Builder. Do not edit via web.
    concurrent: true
    scm:
        - git:
            url: 'https://github.com/shihliu/entitlement-ci'
            branches:
                - origin/master
            basedir: entitlement-ci
    wrappers:
        - default-virt-who-wrappers

- wrapper:
    name: default-virt-who-wrappers
    wrappers:
        - ansicolor
        - workspace-cleanup
        - timestamps

- job-template:
    name: 'rhevm-install-provision'
    defaults: virt-who-provision
    node: docker-rhel7-3
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SERVER_COMPOSE=ohsnap-satellite
            #export RHEL_COMPOSE=release
            #export VIRTWHO_SRC=rhel6.9/rhel6.8/rhel7.3 or default, when it is null,it will create all images
            echo "*********************************setup env*********************************"
            #convert switch for testing against satellite
            if [ "$SWITCH"x = "true"x ]
            then
                export SWITCH=false
            elif [ "$SWITCH"x = "false"x ]
            then
                export SWITCH=true
            fi
            kinit -k -t $KEYTAB $PRINCIPAL
            #Provision base img
            $WORKSPACE/entitlement-ci/provision/create-rhevm-baseimg.sh
            echo "********************************runtime env********************************"
            env | grep -E '(RHEL_COMPOSE|SERVER_COMPOSE|SERVER_TYPE|VIRTWHO_SRC|RHEVM_IP|RHEVM_HOSTNAME)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(RHEL_COMPOSE|SERVER_COMPOSE|SERVER_TYPE|VIRTWHO_SRC|RHEVM_IP|RHEVM_HOSTNAME)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt

- job-template:
    name: 'rhevm-install-runtest'
    defaults: virt-who-runtest
    node: docker-rhel7-3
    builders:
        - shell: |
            #!/bin/bash
            echo "Jenkins machine info we are running on"
            echo "Pinging Test Resources"
            echo "RESOURCES.TXT is as the following"
            cat $WORKSPACE/RESOURCES.txt
            echo "SERVER.TXT is as the following"
            cat $WORKSPACE/SERVER.txt
            # echo "*********************************setup env*********************************"
            # Provision Test Resources
            # Create rhevm machine
            $WORKSPACE/entitlement-ci/provision/rhevm-provision.sh
            # echo "*********************************show env*********************************" 
            echo "Check WORKSPACE/RESOURCES.txt again is as the following"
            cat $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
            env | grep -E '(RHEL_COMPOSE|SERVER_TYPE|SERVER_COMPOSE|VIRTWHO_SRC|SERVER_IP|SERVER_HOSTNAME|RHEVM_IP|RHEVM_HOSTNAME)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(RHEL_COMPOSE|SERVER_TYPE|SERVER_COMPOSE|VIRTWHO_SRC|SERVER_IP|SERVER_HOSTNAME|RHEVM_IP|RHEVM_HOSTNAME)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt
    publishers:
       - archive:
          artifacts: '**/**'
          allow-empty: 'true'
       - trigger-parameterized-builds:
           - project: 'virt-who-rhev-provision'
             current-parameters: false
             condition: 'SUCCESS'
             property-file: $WORKSPACE/RESOURCES.txt
             fail-on-missing: true
           - project: 'rhevm-install-runtest-start'
             current-parameters: false
             condition: 'SUCCESS'
             property-file: $WORKSPACE/RESOURCES.txt,$WORKSPACE/ISEXISTRHEVM.txt
             fail-on-missing: true

- job-template:
    name: 'rhevm-install-runtest-start'
    defaults: virt-who-runtest
    node: 'satellite-slave'
    builders:
        - copyartifact:
            project: 'rhevm-install-runtest'
            filter: '*.txt, *.json'
            target: $WORKSPACE
        - shell: |
            #!/bin/bash
            echo "Jenkins machine info we are running on"
            echo "RESOURCES.TXT is as the following"
            cat $WORKSPACE/RESOURCES.txt
            echo "SERVER.TXT is as the following"
            cat $WORKSPACE/SERVER.txt
            # echo "*********************************setup env*********************************"
            pushd $WORKSPACE/entitlement-ci/testcases/install
            nosetests rhevm41_install.py
            popd

            echo "********************************runtime env********************************"
            echo "********************************runtime env********************************"
            env | grep -E '(RHEL_COMPOSE|SERVER_TYPE|SERVER_COMPOSE|VIRTWHO_SRC|SERVER_IP|SERVER_HOSTNAME|RHEVM_IP|RHEVM_HOSTNAME)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(RHEL_COMPOSE|SERVER_TYPE|SERVER_COMPOSE|VIRTWHO_SRC|SERVER_IP|SERVER_HOSTNAME|RHEVM_IP|RHEVM_HOSTNAME)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt
    publishers:
       - archive:
          artifacts: '**/**'
          allow-empty: 'true'
       - trigger-parameterized-builds:
           - project: 'virt-who-rhev-provision'
             current-parameters: false
             condition: 'SUCCESS'
             property-file: $WORKSPACE/RESOURCES.txt
             fail-on-missing: true

- job-group:
    name: rhevm-install-provision-runtest
    jobs:
      - 'rhevm-install-provision'
      - 'rhevm-install-runtest'
      - 'rhevm-install-runtest-start'
      
- project:
    name: rhevm-install-jobs
    project: rhevm-install
    project_defaults: entitlement-ci/config/project_defaults
    topology_path: entitlement-ci/config
    topology: qeos_rhevm_install
    ssh_keyfile: entitlement-ci/config/keys/ent-key
    # beaker_keyfile: entitlement-ci/config/keys/beaker-key
    # tests_path: entitlement-ci/tests
    testparams: echo "I am a test parameter"
    jobs:
      - rhevm-install-provision-runtest
