- defaults:
    name: virt-who-provision
    description: |
        Managed by Jenkins Job Builder. Do not edit via web.
    concurrent: true
    scm:
        - git:
            url: 'https://github.com/shihliu/entitlement-ci'
            branches:
                - origin/master
            basedir: entitlement-ci
    wrappers:
        - default-virt-who-wrappers

- wrapper:
    name: default-virt-who-wrappers
    wrappers:
        - ansicolor
        - workspace-cleanup
        - timestamps

- job-template:
    name: 'rhel-install-provision'
    defaults: virt-who-provision
    node: docker-rhel
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SWITCH=true/false
            #export RHEL_COMPOSE=
            echo "*********************************setup env*********************************"
            #convert switch for testing against satellite
            if [ "$SWITCH"x = "true"x ]
            then
                export SWITCH=false
            elif [ "$SWITCH"x = "false"x ]
            then
                export SWITCH=true
            fi

            #Provision rhel6.8 released img
            $WORKSPACE/entitlement-ci/provision/create-orig-rhel.sh --imagename=rhel6.8
            
            #Provision rhel6.9 released img
            $WORKSPACE/entitlement-ci/provision/create-orig-rhel.sh --imagename=rhel6.9

            #Provision rhel7.3 released img
            $WORKSPACE/entitlement-ci/provision/create-orig-rhel.sh --imagename=rhel7.3
            echo "********************************runtime env********************************"
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt

- job-template:
    name: 'rhel69-install-provision'
    defaults: virt-who-provision
    node: docker-rhel
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SWITCH=true/false
            #export RHEL_COMPOSE=
            echo "*********************************setup env*********************************"
            #convert switch for testing against satellite
            if [ "$SWITCH"x = "true"x ]
            then
                export SWITCH=false
            elif [ "$SWITCH"x = "false"x ]
            then
                export SWITCH=true
            fi
            kinit -k -t $KEYTAB $PRINCIPAL
            #Provision RHEL_COMPOSE img
            echo "RHEL_COMPOSE" is $RHEL_COMPOSE
            
            docker images|grep $RHEL_COMPOSE
            isRhelExist=$?
            if [ $isRhelExist -eq 0 ]
            then
               docker rmi -f $RHEL_COMPOSE
            fi
            $WORKSPACE/entitlement-ci/provision/rhel_base.sh
            echo "********************************runtime env********************************"
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt
    publishers:
      - archive:
          artifacts: '*.txt, *.json'
          allow-empty: 'true'
      - trigger-parameterized-builds:
          - project: 'rhel68-install-provision'
            current-parameters: true
            condition: 'SUCCESS'
            property-file: $WORKSPACE/RESOURCES.txt
            fail-on-missing: true

- job-template:
    name: 'rhel68-install-provision'
    defaults: virt-who-provision
    node: docker-rhel
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SWITCH=true/false
            #export RHEL_COMPOSE=
            echo "*********************************setup env*********************************"
            #convert switch for testing against satellite
            if [ "$SWITCH"x = "true"x ]
            then
                export SWITCH=false
            elif [ "$SWITCH"x = "false"x ]
            then
                export SWITCH=true
            fi
            kinit -k -t $KEYTAB $PRINCIPAL
            #Provision RHEL_COMPOSE img
            echo "RHEL_COMPOSE" is $RHEL_COMPOSE_2
            
            docker images|grep $RHEL_COMPOSE_2
            isRhelExist=$?
            if [ $isRhelExist -eq 0 ]
            then
               docker rmi -f $RHEL_COMPOSE_2
            fi
            $WORKSPACE/entitlement-ci/provision/rhel_base.sh --imagename=$RHEL_COMPOSE_2
            echo "********************************runtime env********************************"
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE_2)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE_2)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt
    publishers:
      - archive:
          artifacts: '*.txt, *.json'
          allow-empty: 'true'
  
- job-group:
    name: rhel6-install-provision-runtest
    jobs:
      - 'rhel69-install-provision'
      - 'rhel68-install-provision'
      - 'rhel-install-provision'

- project:
    name: rhel6-install-jobs
    project: rhel6-install
    project_defaults: entitlement-ci/config/project_defaults
    topology_path: entitlement-ci/config
    topology: qeos_rhel6_install
    ssh_keyfile: entitlement-ci/config/keys/ent-key
    # beaker_keyfile: entitlement-ci/config/keys/beaker-key
    # tests_path: entitlement-ci/tests
    testparams: echo "I am a test parameter"
    jobs:
      - rhel6-install-provision-runtest
