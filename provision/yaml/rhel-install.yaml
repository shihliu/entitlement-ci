- defaults:
    name: virt-who-provision
    description: |
        Managed by Jenkins Job Builder. Do not edit via web.
    concurrent: true
    scm:
        - git:
            url: 'https://github.com/shihliu/entitlement-ci'
            branches:
                - origin/master
            basedir: entitlement-ci
    wrappers:
        - default-virt-who-wrappers

- wrapper:
    name: default-virt-who-wrappers
    wrappers:
        - ansicolor
        - workspace-cleanup
        - timestamps

- job-template:
    name: 'rhel-release-install-provision'
    defaults: virt-who-provision
    node: docker-rhel7
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SERVER_COMPOSE=ohsnap-satellite
            #export RHEL_COMPOSE=release
            #export VIRTWHO_SRC=rhel6.9/rhel6.8/rhel7.3 or default, when it is null,it will create all images
            echo "*********************************setup env*********************************"
            #convert switch for testing against satellite
            if [ "$VIRTWHO_SRC"x = "default"x ]
            then
                #Provision rhel6.8 released img
                $WORKSPACE/entitlement-ci/provision/create-orig-rhel.sh --imagename=rhel6.8
            
                #Provision rhel6.9 released img
                $WORKSPACE/entitlement-ci/provision/create-orig-rhel.sh --imagename=rhel6.9

                #Provision rhel7.3 released img
                $WORKSPACE/entitlement-ci/provision/create-orig-rhel.sh --imagename=rhel7.3
            elif [ "$VIRTWHO_SRC"x = $VIRTWHO_SRC ]
            then
                #Provision rhel6.8 released img
                $WORKSPACE/entitlement-ci/provision/create-orig-rhel.sh --imagename=$VIRTWHO_SRC
            else
                echo "nothing to do"
            fi
            echo "********************************runtime env********************************"
            env | grep -E '(SERVER_COMPOSE|VIRTWHO_SRC|RHEL_COMPOSE)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(SERVER_COMPOSE|VIRTWHO_SRC|RHEL_COMPOSE)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt

- job-template:
    name: 'rhel6-install-provision'
    defaults: virt-who-provision
    node: docker-rhel
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SERVER_COMPOSE=
            #export RHEL_COMPOSE=
            echo "*********************************setup env*********************************"
            echo "***********************provision $RHEL_COMPOSE img*************************"
            echo "RHEL_COMPOSE" is $RHEL_COMPOSE
            docker images|grep $RHEL_COMPOSE
            isRhelExist=$?
            if [ $isRhelExist -eq 0 ]
            then
               docker rmi -f $RHEL_COMPOSE
            fi
            $WORKSPACE/entitlement-ci/provision/rhel-base.sh
            echo "***********************provision $RHEL_COMPOSE img*************************"
            echo "********************************runtime env********************************"
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(SERVER_COMPOSE|RHEL_COMPOSE)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt

- job-template:
    name: 'rhel7-install-provision'
    defaults: virt-who-provision
    node: docker-rhel7
    builders:
        - shell: |
            #!/bin/bash
            echo "*********************************setup env*********************************"
            #setup environment here to run alone, change back when finished
            #export SERVER_COMPOSE=
            #export RHEL_COMPOSE=
            echo "*********************************setup env*********************************"
            echo "***********************provision $RHEL_COMPOSE img*************************"
            echo "RHEL_COMPOSE" is $RHEL_COMPOSE
            RHEL_IMAGE_NAME=$(echo $RHEL_COMPOSE | tr '[A-Z]' '[a-z]')
            
            docker images|grep $RHEL_IMAGE_NAME
            isRhelExist=$?
            if [ $isRhelExist -eq 0 ]
            then
               docker rmi -f $RHEL_IMAGE_NAME
            fi
            $WORKSPACE/entitlement-ci/provision/rhel-base-new.sh
            if [ "$SERVER_TYPE"x = "DEFAULT"x ]
            then
                export SERVER_TYPE="STAGE"
                echo STAGE_TRIGGER=True>>$WORKSPACE/STAGE_TRIGGER.txt
            fi
            #if [ "$SERVER_TYPE"x = "STAGE"x ]
            #then 
            #    echo STAGE_TRIGGER=True>>$WORKSPACE/STAGE_TRIGGER.txt
            #fi
            echo "***********************provision $RHEL_COMPOSE img*************************"
            echo "********************************runtime env********************************"
            env | grep -E '(SERVER_COMPOSE|SERVER_TYPE|RHEL_COMPOSE)' | sort | xargs -i -d "\n" echo "export" {}
            env | grep -E '(SERVER_COMPOSE|SERVER_TYPE|RHEL_COMPOSE)' >> $WORKSPACE/RESOURCES.txt
            echo "********************************runtime env********************************"
        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt
        - inject:
            properties-file: $WORKSPACE/STAGE_TRIGGER.txt
    publishers:
      - archive:
          artifacts: '**/**'
          allow-empty: 'true'
      - trigger-parameterized-builds:
        - project: virt-who-esx-provision
          property-file: $WORKSPACE/RESOURCES.txt,$WORKSPACE/STAGE_TRIGGER.txt
          fail-on-missing: true
          current-parameters: false
        - project: virt-who-hyperv-provision
          property-file: $WORKSPACE/RESOURCES.txt,$WORKSPACE/STAGE_TRIGGER.txt
          fail-on-missing: true
          current-parameters: false
        - project: virt-who-xen-provision
          property-file: $WORKSPACE/RESOURCES.txt,$WORKSPACE/STAGE_TRIGGER.txt
          fail-on-missing: true
          current-parameters: false
        - project: virt-who-remote-libvirt-provision
          property-file: $WORKSPACE/RESOURCES.txt,$WORKSPACE/STAGE_TRIGGER.txt
          fail-on-missing: true
          current-parameters: false        
        - project: 'rhevm-install-runtest'
          property-file: $WORKSPACE/RESOURCES.txt,$WORKSPACE/STAGE_TRIGGER.txt
          fail-on-missing: true
          current-parameters: false

- job-group:
    name: rhel-install-provision-runtest
    jobs:
      - 'rhel6-install-provision'
      - 'rhel7-install-provision'
      - 'rhel-release-install-provision'

- project:
    name: rhel-install-jobs
    project: rhel-install
    project_defaults: entitlement-ci/config/project_defaults
    topology_path: entitlement-ci/config
    topology: qeos_rhel6_install
    ssh_keyfile: entitlement-ci/config/keys/ent-key
    # beaker_keyfile: entitlement-ci/config/keys/beaker-key
    # tests_path: entitlement-ci/tests
    testparams: echo "I am a test parameter"
    jobs:
      - rhel-install-provision-runtest
